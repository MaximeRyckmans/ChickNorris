<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm
http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
	version="2.0">

	<!-- Queries voor Customers -->
	<named-query name="selectAllCustomers">
		<query>select c from Customer c</query>
	</named-query>
	
	<named-query name="selectCustomersByNameOrSurname">
		<query>select c from Customer c where c.name=:name and c.surName=:surName</query>
	</named-query>
	
	<named-query name="selectCustomersBySurname">
	    <query>select c from Customer c where c.surName=:surName</query>
	</named-query>
	
	<!-- Queries voor Calendars -->
	
	<named-query name="selectAllCalendars">
		<query>select c from Calendar c</query>
	</named-query>
	
	<named-query name="selectAllReservedCalendars">
		<query>select c from Calendar c where c.isReserved=:isReserved</query>
	</named-query>
	
	<!-- Queries voor Location -->
	<named-query name="getLatestLocationByTruckNumber">
		<query>select l from Location l where l.truckNumber=:truckNumber and l.locationDate= (select max(ul.locationDate) from Location as ul where ul.truckNumber = :truckNumber)</query>
	</named-query>
	
	<named-query name="getAllTrucks">
		<query>select distinct l.truckNumber from Location l</query>
	</named-query>
	
	<!-- Queries voor Orders -->
	<named-query name="selectOrdersByNameAndSurname">
		<query>select o from Order o where o.customer.name like :name and o.customer.surName like :surName</query>
	</named-query>
	
	</entity-mappings>